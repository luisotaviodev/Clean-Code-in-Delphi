unit untCaseUseClient;

interface
 uses untUseCaseCliente, System.SysUtils, untDTOCliente, untResponse, uCliente, untEnums;

 type
   TCaseUseClient = class(TInterfacedObject, ICaseUseCliente)
     function Cadastrar(cliente: TCliente): TResponse;
     function Alterar(cliente: TCliente): TResponse;
     function Excluir(id: Integer): TResponse;
     function Consultar(Dto: DtoCliente): TResponse;
   end;

implementation

{ TCaseUseClient }

function TCaseUseClient.Alterar(cliente: TCliente): TResponse;
var
  oAlterar: TResponse;
begin
  try
    oAlterar.Success   := True;
    oAlterar.ErrorCode := 0;
    oAlterar.Message   := RetornarMsgResponse.ALTERADO_COM_SUCESSO;
    oAlterar.Data      := nil;
  except
    on e: Exception do
    begin

    end;
  end;
end;

function TCaseUseClient.Cadastrar(cliente: TCliente): TResponse;
begin

end;

function TCaseUseClient.Consultar(Dto: DtoCliente): TResponse;
begin

end;

function TCaseUseClient.Excluir(id: Integer): TResponse;
begin

end;

end.
